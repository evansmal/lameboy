#pragma once

#include "decoder.hpp"
#include <map>

#define ADD_DESCRIPTION(code, name, length, cycles)                                                \
    {                                                                                              \
        {code}, { code, name, length, cycles }                                                     \
    }

namespace lb::decoder
{

const std::map<Byte, InstructionDescription> INSTRUCTION_REGISTRY = {
    ADD_DESCRIPTION(0x0, "NOP", 1, 4),
    ADD_DESCRIPTION(0x1, "LD BC,u16", 3, 12),
    ADD_DESCRIPTION(0x2, "LD (BC),A", 1, 8),
    ADD_DESCRIPTION(0x3, "INC BC", 1, 8),
    ADD_DESCRIPTION(0x4, "INC B", 1, 4),
    ADD_DESCRIPTION(0x5, "DEC B", 1, 4),
    ADD_DESCRIPTION(0x6, "LD B,u8", 2, 8),
    ADD_DESCRIPTION(0x7, "RLCA", 1, 4),
    ADD_DESCRIPTION(0x8, "LD (u16),SP", 3, 20),
    ADD_DESCRIPTION(0x9, "ADD HL,BC", 1, 8),
    ADD_DESCRIPTION(0xa, "LD A,(BC)", 1, 8),
    ADD_DESCRIPTION(0xb, "DEC BC", 1, 8),
    ADD_DESCRIPTION(0xc, "INC C", 1, 4),
    ADD_DESCRIPTION(0xd, "DEC C", 1, 4),
    ADD_DESCRIPTION(0xe, "LD C,u8", 2, 8),
    ADD_DESCRIPTION(0xf, "RRCA", 1, 4),
    ADD_DESCRIPTION(0x10, "STOP", 1, 4),
    ADD_DESCRIPTION(0x11, "LD DE,u16", 3, 12),
    ADD_DESCRIPTION(0x12, "LD (DE),A", 1, 8),
    ADD_DESCRIPTION(0x13, "INC DE", 1, 8),
    ADD_DESCRIPTION(0x14, "INC D", 1, 4),
    ADD_DESCRIPTION(0x15, "DEC D", 1, 4),
    ADD_DESCRIPTION(0x16, "LD D,u8", 2, 8),
    ADD_DESCRIPTION(0x17, "RLA", 1, 4),
    ADD_DESCRIPTION(0x18, "JR i8", 2, 12),
    ADD_DESCRIPTION(0x19, "ADD HL,DE", 1, 8),
    ADD_DESCRIPTION(0x1a, "LD A,(DE)", 1, 8),
    ADD_DESCRIPTION(0x1b, "DEC DE", 1, 8),
    ADD_DESCRIPTION(0x1c, "INC E", 1, 4),
    ADD_DESCRIPTION(0x1d, "DEC E", 1, 4),
    ADD_DESCRIPTION(0x1e, "LD E,u8", 2, 8),
    ADD_DESCRIPTION(0x1f, "RRA", 1, 4),
    ADD_DESCRIPTION(0x20, "JR NZ,i8", 2, 12),
    ADD_DESCRIPTION(0x21, "LD HL,u16", 3, 12),
    ADD_DESCRIPTION(0x22, "LD (HL+),A", 1, 8),
    ADD_DESCRIPTION(0x23, "INC HL", 1, 8),
    ADD_DESCRIPTION(0x24, "INC H", 1, 4),
    ADD_DESCRIPTION(0x25, "DEC H", 1, 4),
    ADD_DESCRIPTION(0x26, "LD H,u8", 2, 8),
    ADD_DESCRIPTION(0x27, "DAA", 1, 4),
    ADD_DESCRIPTION(0x28, "JR Z,i8", 2, 12),
    ADD_DESCRIPTION(0x29, "ADD HL,HL", 1, 8),
    ADD_DESCRIPTION(0x2a, "LD A,(HL+)", 1, 8),
    ADD_DESCRIPTION(0x2b, "DEC HL", 1, 8),
    ADD_DESCRIPTION(0x2c, "INC L", 1, 4),
    ADD_DESCRIPTION(0x2d, "DEC L", 1, 4),
    ADD_DESCRIPTION(0x2e, "LD L,u8", 2, 8),
    ADD_DESCRIPTION(0x2f, "CPL", 1, 4),
    ADD_DESCRIPTION(0x30, "JR NC,i8", 2, 12),
    ADD_DESCRIPTION(0x31, "LD SP,u16", 3, 12),
    ADD_DESCRIPTION(0x32, "LD (HL-),A", 1, 8),
    ADD_DESCRIPTION(0x33, "INC SP", 1, 8),
    ADD_DESCRIPTION(0x34, "INC (HL)", 1, 12),
    ADD_DESCRIPTION(0x35, "DEC (HL)", 1, 12),
    ADD_DESCRIPTION(0x36, "LD (HL),u8", 2, 12),
    ADD_DESCRIPTION(0x37, "SCF", 1, 4),
    ADD_DESCRIPTION(0x38, "JR C,i8", 2, 12),
    ADD_DESCRIPTION(0x39, "ADD HL,SP", 1, 8),
    ADD_DESCRIPTION(0x3a, "LD A,(HL-)", 1, 8),
    ADD_DESCRIPTION(0x3b, "DEC SP", 1, 8),
    ADD_DESCRIPTION(0x3c, "INC A", 1, 4),
    ADD_DESCRIPTION(0x3d, "DEC A", 1, 4),
    ADD_DESCRIPTION(0x3e, "LD A,u8", 2, 8),
    ADD_DESCRIPTION(0x3f, "CCF", 1, 4),
    ADD_DESCRIPTION(0x40, "LD B,B", 1, 4),
    ADD_DESCRIPTION(0x41, "LD B,C", 1, 4),
    ADD_DESCRIPTION(0x42, "LD B,D", 1, 4),
    ADD_DESCRIPTION(0x43, "LD B,E", 1, 4),
    ADD_DESCRIPTION(0x44, "LD B,H", 1, 4),
    ADD_DESCRIPTION(0x45, "LD B,L", 1, 4),
    ADD_DESCRIPTION(0x46, "LD B,(HL)", 1, 8),
    ADD_DESCRIPTION(0x47, "LD B,A", 1, 4),
    ADD_DESCRIPTION(0x48, "LD C,B", 1, 4),
    ADD_DESCRIPTION(0x49, "LD C,C", 1, 4),
    ADD_DESCRIPTION(0x4a, "LD C,D", 1, 4),
    ADD_DESCRIPTION(0x4b, "LD C,E", 1, 4),
    ADD_DESCRIPTION(0x4c, "LD C,H", 1, 4),
    ADD_DESCRIPTION(0x4d, "LD C,L", 1, 4),
    ADD_DESCRIPTION(0x4e, "LD C,(HL)", 1, 8),
    ADD_DESCRIPTION(0x4f, "LD C,A", 1, 4),
    ADD_DESCRIPTION(0x50, "LD D,B", 1, 4),
    ADD_DESCRIPTION(0x51, "LD D,C", 1, 4),
    ADD_DESCRIPTION(0x52, "LD D,D", 1, 4),
    ADD_DESCRIPTION(0x53, "LD D,E", 1, 4),
    ADD_DESCRIPTION(0x54, "LD D,H", 1, 4),
    ADD_DESCRIPTION(0x55, "LD D,L", 1, 4),
    ADD_DESCRIPTION(0x56, "LD D,(HL)", 1, 8),
    ADD_DESCRIPTION(0x57, "LD D,A", 1, 4),
    ADD_DESCRIPTION(0x58, "LD E,B", 1, 4),
    ADD_DESCRIPTION(0x59, "LD E,C", 1, 4),
    ADD_DESCRIPTION(0x5a, "LD E,D", 1, 4),
    ADD_DESCRIPTION(0x5b, "LD E,E", 1, 4),
    ADD_DESCRIPTION(0x5c, "LD E,H", 1, 4),
    ADD_DESCRIPTION(0x5d, "LD E,L", 1, 4),
    ADD_DESCRIPTION(0x5e, "LD E,(HL)", 1, 8),
    ADD_DESCRIPTION(0x5f, "LD E,A", 1, 4),
    ADD_DESCRIPTION(0x60, "LD H,B", 1, 4),
    ADD_DESCRIPTION(0x61, "LD H,C", 1, 4),
    ADD_DESCRIPTION(0x62, "LD H,D", 1, 4),
    ADD_DESCRIPTION(0x63, "LD H,E", 1, 4),
    ADD_DESCRIPTION(0x64, "LD H,H", 1, 4),
    ADD_DESCRIPTION(0x65, "LD H,L", 1, 4),
    ADD_DESCRIPTION(0x66, "LD H,(HL)", 1, 8),
    ADD_DESCRIPTION(0x67, "LD H,A", 1, 4),
    ADD_DESCRIPTION(0x68, "LD L,B", 1, 4),
    ADD_DESCRIPTION(0x69, "LD L,C", 1, 4),
    ADD_DESCRIPTION(0x6a, "LD L,D", 1, 4),
    ADD_DESCRIPTION(0x6b, "LD L,E", 1, 4),
    ADD_DESCRIPTION(0x6c, "LD L,H", 1, 4),
    ADD_DESCRIPTION(0x6d, "LD L,L", 1, 4),
    ADD_DESCRIPTION(0x6e, "LD L,(HL)", 1, 8),
    ADD_DESCRIPTION(0x6f, "LD L,A", 1, 4),
    ADD_DESCRIPTION(0x70, "LD (HL),B", 1, 8),
    ADD_DESCRIPTION(0x71, "LD (HL),C", 1, 8),
    ADD_DESCRIPTION(0x72, "LD (HL),D", 1, 8),
    ADD_DESCRIPTION(0x73, "LD (HL),E", 1, 8),
    ADD_DESCRIPTION(0x74, "LD (HL),H", 1, 8),
    ADD_DESCRIPTION(0x75, "LD (HL),L", 1, 8),
    ADD_DESCRIPTION(0x76, "HALT", 1, 4),
    ADD_DESCRIPTION(0x77, "LD (HL),A", 1, 8),
    ADD_DESCRIPTION(0x78, "LD A,B", 1, 4),
    ADD_DESCRIPTION(0x79, "LD A,C", 1, 4),
    ADD_DESCRIPTION(0x7a, "LD A,D", 1, 4),
    ADD_DESCRIPTION(0x7b, "LD A,E", 1, 4),
    ADD_DESCRIPTION(0x7c, "LD A,H", 1, 4),
    ADD_DESCRIPTION(0x7d, "LD A,L", 1, 4),
    ADD_DESCRIPTION(0x7e, "LD A,(HL)", 1, 8),
    ADD_DESCRIPTION(0x7f, "LD A,A", 1, 4),
    ADD_DESCRIPTION(0x80, "ADD A,B", 1, 4),
    ADD_DESCRIPTION(0x81, "ADD A,C", 1, 4),
    ADD_DESCRIPTION(0x82, "ADD A,D", 1, 4),
    ADD_DESCRIPTION(0x83, "ADD A,E", 1, 4),
    ADD_DESCRIPTION(0x84, "ADD A,H", 1, 4),
    ADD_DESCRIPTION(0x85, "ADD A,L", 1, 4),
    ADD_DESCRIPTION(0x86, "ADD A,(HL)", 1, 8),
    ADD_DESCRIPTION(0x87, "ADD A,A", 1, 4),
    ADD_DESCRIPTION(0x88, "ADC A,B", 1, 4),
    ADD_DESCRIPTION(0x89, "ADC A,C", 1, 4),
    ADD_DESCRIPTION(0x8a, "ADC A,D", 1, 4),
    ADD_DESCRIPTION(0x8b, "ADC A,E", 1, 4),
    ADD_DESCRIPTION(0x8c, "ADC A,H", 1, 4),
    ADD_DESCRIPTION(0x8d, "ADC A,L", 1, 4),
    ADD_DESCRIPTION(0x8e, "ADC A,(HL)", 1, 8),
    ADD_DESCRIPTION(0x8f, "ADC A,A", 1, 4),
    ADD_DESCRIPTION(0x90, "SUB A,B", 1, 4),
    ADD_DESCRIPTION(0x91, "SUB A,C", 1, 4),
    ADD_DESCRIPTION(0x92, "SUB A,D", 1, 4),
    ADD_DESCRIPTION(0x93, "SUB A,E", 1, 4),
    ADD_DESCRIPTION(0x94, "SUB A,H", 1, 4),
    ADD_DESCRIPTION(0x95, "SUB A,L", 1, 4),
    ADD_DESCRIPTION(0x96, "SUB A,(HL)", 1, 8),
    ADD_DESCRIPTION(0x97, "SUB A,A", 1, 4),
    ADD_DESCRIPTION(0x98, "SBC A,B", 1, 4),
    ADD_DESCRIPTION(0x99, "SBC A,C", 1, 4),
    ADD_DESCRIPTION(0x9a, "SBC A,D", 1, 4),
    ADD_DESCRIPTION(0x9b, "SBC A,E", 1, 4),
    ADD_DESCRIPTION(0x9c, "SBC A,H", 1, 4),
    ADD_DESCRIPTION(0x9d, "SBC A,L", 1, 4),
    ADD_DESCRIPTION(0x9e, "SBC A,(HL)", 1, 8),
    ADD_DESCRIPTION(0x9f, "SBC A,A", 1, 4),
    ADD_DESCRIPTION(0xa0, "AND A,B", 1, 4),
    ADD_DESCRIPTION(0xa1, "AND A,C", 1, 4),
    ADD_DESCRIPTION(0xa2, "AND A,D", 1, 4),
    ADD_DESCRIPTION(0xa3, "AND A,E", 1, 4),
    ADD_DESCRIPTION(0xa4, "AND A,H", 1, 4),
    ADD_DESCRIPTION(0xa5, "AND A,L", 1, 4),
    ADD_DESCRIPTION(0xa6, "AND A,(HL)", 1, 8),
    ADD_DESCRIPTION(0xa7, "AND A,A", 1, 4),
    ADD_DESCRIPTION(0xa8, "XOR A,B", 1, 4),
    ADD_DESCRIPTION(0xa9, "XOR A,C", 1, 4),
    ADD_DESCRIPTION(0xaa, "XOR A,D", 1, 4),
    ADD_DESCRIPTION(0xab, "XOR A,E", 1, 4),
    ADD_DESCRIPTION(0xac, "XOR A,H", 1, 4),
    ADD_DESCRIPTION(0xad, "XOR A,L", 1, 4),
    ADD_DESCRIPTION(0xae, "XOR A,(HL)", 1, 8),
    ADD_DESCRIPTION(0xaf, "XOR A,A", 1, 4),
    ADD_DESCRIPTION(0xb0, "OR A,B", 1, 4),
    ADD_DESCRIPTION(0xb1, "OR A,C", 1, 4),
    ADD_DESCRIPTION(0xb2, "OR A,D", 1, 4),
    ADD_DESCRIPTION(0xb3, "OR A,E", 1, 4),
    ADD_DESCRIPTION(0xb4, "OR A,H", 1, 4),
    ADD_DESCRIPTION(0xb5, "OR A,L", 1, 4),
    ADD_DESCRIPTION(0xb6, "OR A,(HL)", 1, 8),
    ADD_DESCRIPTION(0xb7, "OR A,A", 1, 4),
    ADD_DESCRIPTION(0xb8, "CP A,B", 1, 4),
    ADD_DESCRIPTION(0xb9, "CP A,C", 1, 4),
    ADD_DESCRIPTION(0xba, "CP A,D", 1, 4),
    ADD_DESCRIPTION(0xbb, "CP A,E", 1, 4),
    ADD_DESCRIPTION(0xbc, "CP A,H", 1, 4),
    ADD_DESCRIPTION(0xbd, "CP A,L", 1, 4),
    ADD_DESCRIPTION(0xbe, "CP A,(HL)", 1, 8),
    ADD_DESCRIPTION(0xbf, "CP A,A", 1, 4),
    ADD_DESCRIPTION(0xc0, "RET NZ", 1, 20),
    ADD_DESCRIPTION(0xc1, "POP BC", 1, 12),
    ADD_DESCRIPTION(0xc2, "JP NZ,u16", 3, 16),
    ADD_DESCRIPTION(0xc3, "JP u16", 3, 16),
    ADD_DESCRIPTION(0xc4, "CALL NZ,u16", 3, 24),
    ADD_DESCRIPTION(0xc5, "PUSH BC", 1, 16),
    ADD_DESCRIPTION(0xc6, "ADD A,u8", 2, 8),
    ADD_DESCRIPTION(0xc7, "RST 00h", 1, 16),
    ADD_DESCRIPTION(0xc8, "RET Z", 1, 20),
    ADD_DESCRIPTION(0xc9, "RET", 1, 16),
    ADD_DESCRIPTION(0xca, "JP Z,u16", 3, 16),
    ADD_DESCRIPTION(0xcb, "PREFIX CB", 1, 4),
    ADD_DESCRIPTION(0xcc, "CALL Z,u16", 3, 24),
    ADD_DESCRIPTION(0xcd, "CALL u16", 3, 24),
    ADD_DESCRIPTION(0xce, "ADC A,u8", 2, 8),
    ADD_DESCRIPTION(0xcf, "RST 08h", 1, 16),
    ADD_DESCRIPTION(0xd0, "RET NC", 1, 20),
    ADD_DESCRIPTION(0xd1, "POP DE", 1, 12),
    ADD_DESCRIPTION(0xd2, "JP NC,u16", 3, 16),
    ADD_DESCRIPTION(0xd3, "UNUSED", 1, 0),
    ADD_DESCRIPTION(0xd4, "CALL NC,u16", 3, 24),
    ADD_DESCRIPTION(0xd5, "PUSH DE", 1, 16),
    ADD_DESCRIPTION(0xd6, "SUB A,u8", 2, 8),
    ADD_DESCRIPTION(0xd7, "RST 10h", 1, 16),
    ADD_DESCRIPTION(0xd8, "RET C", 1, 20),
    ADD_DESCRIPTION(0xd9, "RETI", 1, 16),
    ADD_DESCRIPTION(0xda, "JP C,u16", 3, 16),
    ADD_DESCRIPTION(0xdb, "UNUSED", 1, 0),
    ADD_DESCRIPTION(0xdc, "CALL C,u16", 3, 24),
    ADD_DESCRIPTION(0xdd, "UNUSED", 1, 0),
    ADD_DESCRIPTION(0xde, "SBC A,u8", 2, 8),
    ADD_DESCRIPTION(0xdf, "RST 18h", 1, 16),
    ADD_DESCRIPTION(0xe0, "LD (FF00+u8),A", 2, 12),
    ADD_DESCRIPTION(0xe1, "POP HL", 1, 12),
    ADD_DESCRIPTION(0xe2, "LD (FF00+C),A", 1, 8),
    ADD_DESCRIPTION(0xe3, "UNUSED", 1, 0),
    ADD_DESCRIPTION(0xe4, "UNUSED", 1, 0),
    ADD_DESCRIPTION(0xe5, "PUSH HL", 1, 16),
    ADD_DESCRIPTION(0xe6, "AND A,u8", 2, 8),
    ADD_DESCRIPTION(0xe7, "RST 20h", 1, 16),
    ADD_DESCRIPTION(0xe8, "ADD SP,i8", 2, 16),
    ADD_DESCRIPTION(0xe9, "JP HL", 1, 4),
    ADD_DESCRIPTION(0xea, "LD (u16),A", 3, 16),
    ADD_DESCRIPTION(0xeb, "UNUSED", 1, 0),
    ADD_DESCRIPTION(0xec, "UNUSED", 1, 0),
    ADD_DESCRIPTION(0xed, "UNUSED", 1, 0),
    ADD_DESCRIPTION(0xee, "XOR A,u8", 2, 8),
    ADD_DESCRIPTION(0xef, "RST 28h", 1, 16),
    ADD_DESCRIPTION(0xf0, "LD A,(FF00+u8)", 2, 12),
    ADD_DESCRIPTION(0xf1, "POP AF", 1, 12),
    ADD_DESCRIPTION(0xf2, "LD A,(FF00+C)", 1, 8),
    ADD_DESCRIPTION(0xf3, "DI", 1, 4),
    ADD_DESCRIPTION(0xf4, "UNUSED", 1, 0),
    ADD_DESCRIPTION(0xf5, "PUSH AF", 1, 16),
    ADD_DESCRIPTION(0xf6, "OR A,u8", 2, 8),
    ADD_DESCRIPTION(0xf7, "RST 30h", 1, 16),
    ADD_DESCRIPTION(0xf8, "LD HL,SP+i8", 2, 12),
    ADD_DESCRIPTION(0xf9, "LD SP,HL", 1, 8),
    ADD_DESCRIPTION(0xfa, "LD A,(u16)", 3, 16),
    ADD_DESCRIPTION(0xfb, "EI", 1, 4),
    ADD_DESCRIPTION(0xfc, "UNUSED", 1, 0),
    ADD_DESCRIPTION(0xfd, "UNUSED", 1, 0),
    ADD_DESCRIPTION(0xfe, "CP A,u8", 2, 8),
    ADD_DESCRIPTION(0xff, "RST 38h", 1, 16),
};

}
